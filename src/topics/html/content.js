export const intro = [
    "🟥 What the Heck is HTML?",
    "------------------------------",
    "Imagine you're building a house. The bricks, walls, rooms — all the structure — that's what HTML is for a website.",
    " ",
    "It doesn't care about colors, animations, or fancy styling. It just wants to put stuff in the right place — like saying:",
    "This is a heading",
    "This is a paragraph",
    "This is an image",
    "This is a button",
    " ",
    "That's it. Simple. HTML stands for HyperText Markup Language, but let's ignore the jargon. Just remember:",
    "🧠 HTML tells the browser what each part of your webpage is.",
    " ",
    "🚀 Your First HTML Page (Boilerplate)",
    "Every HTML page starts with a boring-looking skeleton. It looks like this:",
    "&lt;!DOCTYPE html&gt;",
    "&lt;html&gt;",
    "  &lt;head&gt;",
    "    &lt;title&gt;My First Page&lt;/title&gt;",
    "  &lt;/head&gt;",
    "  &lt;body&gt;",
    "    &lt;h1&gt;Hello, CodeNest!&lt;/h1&gt;",
    "    &lt;p&gt;This is my first web page.&lt;/p&gt;",
    "  &lt;/body&gt;",
    "&lt;/html&gt;",
    " ",
    "Let's break it down like a desi:",
    "&lt;!DOCTYPE html&gt; - Bro, I'm writing HTML5, okay?",
    "&lt;html&gt; - This whole document is a webpage.",
    "&lt;head&gt; - Stuff that you don't see on the page (like the title, SEO, meta info).",
    "&lt;body&gt; - The actual stuff you see: text, images, buttons, etc.",
];
export const tags = [
    "🏷️ Tags, Elements & Attributes — The HTML Lingo",
    "------------------------------",
    "Tags are like open and close wrappers.",
    "Example: &lt;p&gt;hello&lt;/p&gt; is a paragraph. You open with &lt;p&gt;, close with &lt;/p&gt;",
    "Element = full package: tag + content + closing.",
    "So &lt;h1&gt;Welcome&lt;/h1&gt; is one heading element.",
    "Attributes give extra info.",
    " ",
    "For an image:",
    "  &lt;img src='cat.png' alt='A cute cat' /&gt;",
    "src tells where the image is",
    "alt is the backup text if image breaks",
    " ",
    "👉 You'll use tags to structure, and attributes to describe.",
    " ",
    "🧠 What Are HTML Attributes?",
    "------------------------------",
    "Alright, you’ve seen tags like &lt;p&gt;, &lt;a&gt;, &lt;img&gt;, etc.",
    "But sometimes tags need extra details. That’s where attributes come in.",
    " ",
    "Think of attributes like little labels or instructions you stick on HTML elements.",
    "They give extra information like:",
    "  • What the link should point to",
    "  • Where the image lives",
    "  • How a button should behave",
    "  • Or what styles to apply",
    " ",
    "📦 How Do Attributes Look?",
    " ",
    "Attributes live inside the opening tag, like this:",
    "&lt;tagName attributeName=\"value\"&gt;Content&lt;/tagName&gt;",
    " ",
    "Yup, it’s like giving a tag some personality or a mission.",
    " ",
    "🧪 Examples (Simple & Real):",
    "&lt;a href=\"https://codenest.com\"&gt;Visit CodeNest&lt;/a&gt;",
    "Here, href=\"https://codenest.com\" is the attribute telling the link where to go.",
    " ",
    "&lt;img src=\"cat.jpg\" alt=\"A sleepy cat\" /&gt;",
    "  • src is the image file location",
    "  • alt is the text shown if the image doesn’t load (also helps screen readers!)",
    " ",
    "🏷️ Common HTML Attributes You’ll See a Lot",
    "| Attribute     | What It Does                                 |",
    "| ------------- | -------------------------------------------- |",
    "| href          | The destination URL for links                |",
    "| src           | Image or media file location                 |",
    "| alt           | Description of image (for accessibility)     |",
    "| id            | Unique identifier for an element             |",
    "| class         | Groups elements for styling (CSS!)           |",
    "| type          | Defines the type (e.g., of input, button)    |",
    "| value         | The default or current value of input fields |",
    "| placeholder   | Hint text in input fields                    |",
    "| name          | Used to send data from inputs in forms       |",
    "| required      | Makes a field mandatory before submission    |",
    "| disabled      | Disables input or button                     |",
    "| checked       | Pre-selects checkbox or radio button         |",
    " ",
    "🧬 The Star Players: id and class",
    " ",
    "Let’s pause and go deeper into these two because you’ll use them ALL. THE. TIME.",
    " ",
    "🔹 id",
    "  • It gives an element a unique name",
    "  • Used mostly with JavaScript and anchor links",
    "&lt;h2 id=\"about-me\"&gt;About Me&lt;/h2&gt;",
    "➡️ Only one element on a page should have a specific id.",
    " ",
    "🔹 class",
    "  • It lets you apply the same CSS styles or JavaScript logic to multiple elements.",
    "&lt;p class=\"highlight\"&gt;This text will be styled!&lt;/p&gt;",
    "➡️ You can use the same class on many elements.",
    " ",
    "🔥 Real-Life Analogy:",
    "id is like a student roll number — unique to one person.",
    "class is like a classroom — multiple students can belong to the same class.",
    " ",
    "🚨 Can You Use Multiple Attributes?",
    " ",
    "Absolutely. You can stack them like toppings on a pizza 🍕",
    "&lt;input type=\"text\" placeholder=\"Enter your name\" required /&gt;",
    "This input:",
    "  • Accepts text",
    "  • Shows hint text",
    "  • Can’t be left empty",
    " ",
    "🧠 TL;DR",
    "Attributes give extra info to elements.",
    "Always written inside the opening tag.",
    "Some attributes are universal (id, class), others are specific to the tag."
]

export const text = [
    "🏷️ Headings & Paragraphs – Shouting vs. Talking",
    "------------------------------",
    "🧠 What's a Heading?",
    "A heading is like a title. You use it to shout, “This section is important!”",
    "There are 6 heading levels:",
    "&lt;h1&gt; is the biggest, &lt;h6&gt; is the smallest.",
    " ",
    "&lt;h1&gt;I’m the boss heading&lt;/h1&gt;",
    "&lt;h2&gt;Still important&lt;/h2&gt;",
    "&lt;h3&gt;Kind of okay&lt;/h3&gt;",
    "&lt;h4&gt;Meh&lt;/h4&gt;",
    "&lt;h5&gt;Almost a whisper&lt;/h5&gt;",
    "&lt;h6&gt;Can you hear me?&lt;/h6&gt;",
    " ",
    "Only one &lt;h1&gt; per page — think of it as the main title. Others are like subtitles or section titles.",
    " ",
    "🧠 What’s a Paragraph?",
    "A paragraph is just normal text. You wrap it with &lt;p&gt; tags:",
    "&lt;p&gt;This is a paragraph. You can write anything inside it. Even emotional rants.&lt;/p&gt;",
    " ",
    "Browsers automatically give it some spacing. So no need to add Enter 50 times like your Word doc habits."
]
export const lists = [
    "📋 Lists – Bullet Points = Clarity",
    "------------------------------",
    "You’ve seen lists a thousand times: to-do lists, grocery lists, bucket lists. In HTML, there are 2 types:",
    " ",
    "✅ Unordered List (&lt;ul&gt;)",

    "For things with no order, like:",
    " ",
    "&lt;ul&gt;",
    "  &lt;li&gt;Milk&lt;/li&gt;",
    "  &lt;li&gt;Bread&lt;/li&gt;",
    "  &lt;li&gt;Choco Pie&lt;/li&gt;",
    "&lt;/ul&gt;",
    " ",
    "You’ll get:",
    " • Milk",
    " • Bread",
    " • Choco Pie",
    " ",
    "🔢 Ordered List (&lt;ol&gt;)",

    "When order matters, like:",
    " ",
    "&lt;ol&gt;",
    "  &lt;li&gt;Wake up&lt;/li&gt;",
    "  &lt;li&gt;Code&lt;/li&gt;",
    "  &lt;li&gt;Sleep&lt;/li&gt;",
    "&lt;/ol&gt;",
    " ",
    "You’ll get:",
    " 1. Wake up",
    " 2. Code",
    " 3. Sleep",
]
export const links = [
    "🔗 Links – Connect Your Web",
    "------------------------------",
    "Want to go from one page to another? That’s what &lt;a&gt; is for:",
    " ",
    '&lt;a href="https://google.com"&gt;Go to Google&lt;/a&gt;',
    "href = where to go",
    "The text inside is what people click",
    " ",
    'Tip: Always write target="_blank" if you want the link to open in a new tab.',
    '&lt;a href="https://youtube.com" target="_blank"&gt;Open YouTube&lt;/a&gt;',
]
export const layout = [
    "🧱 Layout Tags – Giving Your Page a Skeleton",
    "------------------------------",
    "Until now, you’ve written headings, paragraphs, links, and images. Cool.",
    " ",
    "But imagine putting them all on a blank page... Everything will just fall on top of each other like a mess 🥲",
    "That’s where layout tags come in — they organize your content and give structure.",
    " ",
    "🧊 The Div – The Box That Can Hold Anything",
    " ",
    "🧠 What is a &lt;div&gt;?",
    "A &lt;div&gt; is just a box. A plain, invisible box that holds stuff.",
    "&lt;div&gt;",
    "  &lt;h2&gt;This is a section&lt;/h2&gt;",
    "  &lt;p&gt;Some content goes here...&lt;/p&gt;",
    "&lt;/div&gt;",
    " ",
    "Why use it?",
    "Because CSS can style this box. You can:",
    "   - give it width, height",
    "   - background color",
    "   - add padding, borders",
    "   - make it a flex or grid container",
    " ",
    "Think of it as:",
    "📦 “Hey browser, group these things together, I want to design them as one block.”",
    " ",
    "✂️ The Span – The Inline Wrapper",
    " ",
    "🧠 What is &lt;span&gt;?",
    "Unlike &lt;div&gt;, which is a big box that takes the full width,",
    "&lt;span&gt; is used inside text — it doesn’t break the line.",
    "Example:",
    "&lt;p&gt;This is &lt;span style=\"color: red;\"&gt;important&lt;/span&gt; text.&lt;/p&gt;",
    "So use &lt;span&gt; when you want to style a part of a sentence.",
    " ",
    "🧠 Semantic Tags – Using Meaningful Wrappers (Not Just Divs Everywhere)",
    "Okay, &lt;div&gt; and &lt;span&gt; are cool — but they have no meaning.",
    "They’re just boxes.",
    " ",
    "Semantic tags = tags with meaning.",
    "They tell the browser AND screen readers:",
    "\"Hey, this is the nav bar.\" or",
    "\"This is the footer.\"",
    " ",
    "Here’s your semantic squad:",
    " ",
    "🧠 &lt;header&gt;",

    "Top section of the page (usually has logo, site name, maybe nav links)",

    "&lt;header&gt;",
    "  &lt;h1&gt;CodeNest&lt;/h1&gt;",
    "&lt;/header&gt;",
    " ",
    "🧠 &lt;nav&gt;",

    "For navigation menus (like your top navbar or side links)",

    "&lt;nav&gt;",
    "  &lt;a href=\"/\"&gt;Home&lt;/a&gt;",
    "  &lt;a href=\"/topics\"&gt;Topics&lt;/a&gt;",
    "&lt;/nav&gt;",
    " ",
    "🧠 &lt;main&gt;",

    "The main content of the page",
    "Only one per page",

    "&lt;main&gt;",
    "  &lt;h2&gt;Welcome to CodeNest&lt;/h2&gt;",
    "  &lt;p&gt;This is the main content of the page.&lt;/p&gt;",
    "&lt;/main&gt;",
    " ",
    "🧠 &lt;section&gt;",

    "A separate section of content",
    "(like “About”, “Features”, “Reviews”)",

    "&lt;section&gt;",
    "  &lt;h2&gt;Features&lt;/h2&gt;",
    "  &lt;p&gt;CodeNest helps you learn in a chill way.&lt;/p&gt;",
    "&lt;/section&gt;",
    " ",
    "🧠 &lt;article&gt;",

    "For independent pieces of content",
    "(blog post, news item, forum post)",

    "&lt;article&gt;",
    "  &lt;h3&gt;How I mastered HTML in 3 days&lt;/h3&gt;",
    "  &lt;p&gt;Step 1: Coffee. Step 2: CodeNest. Step 3: Profit.&lt;/p&gt;",
    "&lt;/article&gt;",
    " ",
    "🧠 &lt;aside&gt;",

    "For side content like ads, sidebars, or “related posts”",

    "&lt;aside&gt;",
    "  &lt;h4&gt;More Topics&lt;/h4&gt;",
    "  &lt;ul&gt;",
    "    &lt;li&gt;CSS Basics&lt;/li&gt;",
    "    &lt;li&gt;JavaScript 101&lt;/li&gt;",
    "  &lt;/ul&gt;",
    "&lt;/aside&gt;",
    " ",
    "🧠 &lt;footer&gt;",

    "The bottom of the page",
    "(copyrights, contact info, etc.)",

    "&lt;footer&gt;",
    "  &lt;p&gt;© 2025 CodeNest. All rights reserved.&lt;/p&gt;",
    "&lt;/footer&gt;",
    " ",
    "TL;DR – When to Use What?",
    " ",
    "| Tag         | Use It For...                |",
    "| ----------- | ---------------------------- |",
    "| &lt;div&gt;       | Generic box/layout wrapper   |",
    "| &lt;span&gt;      | Inline styling in text       |",
    "| &lt;header&gt;    | Top of your page             |",
    "| &lt;nav&gt;       | Navigation links             |",
    "| &lt;main&gt;      | Main body content            |",
    "| &lt;section&gt;   | Dividing parts inside main   |",
    "| &lt;article&gt;   | Standalone content           |",
    "| &lt;aside&gt;     | Side things like ads/related |",
    "| &lt;footer&gt;    | Bottom stuff                 |",
];

export const forms = [
    "🧾 Forms & Inputs – Making Your Page Listen to People",
    "------------------------------",
    "So far, your page has only talked at the user.",
    "Now it’s time to let the user talk back — to ask for their name, email, password, opinion, or… which pizza topping they love 🍕",
    " ",
    "That’s where HTML Forms come in.",
    " ",
    "🧠 What’s a Form?",
    " ",
    "A form is a wrapper that collects data. Like a digital notebook.",
    "&lt;form&gt;",
    "  &lt;!-- input fields go here --&gt;",
    "&lt;/form&gt;",
    " ",
    "When a user types something in and clicks submit — that info can go to a server or be used in JavaScript.",
    " ",
    "🧩 Input Types – The Real MVPs",
    " ",
    "Here’s the bread and butter of user interaction:",
    "&lt;input type=\"text\" /&gt;",
    " ",
    "But wait — there’s more than just text!",
    "Here’s a breakdown of the common types:",
    " ",
    "| Type       | What It Does                             |",
    "| ---------- | ---------------------------------------- |",
    "| text       | Single-line text input (e.g., name)      |",
    "| email      | For email addresses (auto-checks format) |",
    "| password   | Hides the typed text                      |",
    "| number     | Only allows numbers                       |",
    "| checkbox   | Tick a box (yes/no)                       |",
    "| radio      | Select one option from a group            |",
    "| date       | Pick a date from calendar popup           |",
    "| file       | Upload files                              |",
    "| submit     | Button to send the form                   |",
    "| reset      | Clears all input fields                   |",
    " ",
    "📋 Example – Simple Form",
    " ",
    "&lt;form&gt;",
    "  &lt;label for=\"name\"&gt;Name:&lt;/label&gt;",
    "  &lt;input type=\"text\" id=\"name\" /&gt;",
    "  &lt;br /&gt;&lt;br /&gt;",
    "  &lt;label for=\"email\"&gt;Email:&lt;/label&gt;",
    "  &lt;input type=\"email\" id=\"email\" /&gt;",
    "  &lt;br /&gt;&lt;br /&gt;",
    "  &lt;label for=\"message\"&gt;Message:&lt;/label&gt;&lt;br /&gt;",
    "  &lt;textarea id=\"message\" rows=\"4\" cols=\"30\"&gt;&lt;/textarea&gt;",
    "  &lt;br /&gt;&lt;br /&gt;",
    "  &lt;button type=\"submit\"&gt;Submit&lt;/button&gt;",
    "&lt;/form&gt;",
    " ",
    "🔍 Labels – Why They Matter",
    " ",
    "Use &lt;label&gt; to describe what an input is for.",
    "Always connect the label to the input using the for attribute and matching id.",
    "&lt;label for=\"username\"&gt;Username:&lt;/label&gt;",
    "&lt;input id=\"username\" type=\"text\" /&gt;",
    " ",
    "This helps:",
    "- Screen readers for accessibility",
    "- Clicking the label auto-focuses the input",
    " ",
    "🎯 Radio Buttons vs. Checkboxes",
    " ",
    "☑️ Checkbox: You can pick multiple",
    "&lt;label&gt;&lt;input type=\"checkbox\" /&gt; HTML&lt;/label&gt;",
    "&lt;label&gt;&lt;input type=\"checkbox\" /&gt; CSS&lt;/label&gt;",
    "&lt;label&gt;&lt;input type=\"checkbox\" /&gt; JS&lt;/label&gt;",
    " ",
    "🔘 Radio: You can pick only one",
    "&lt;label&gt;&lt;input type=\"radio\" name=\"lang\" /&gt; HTML&lt;/label&gt;",
    "&lt;label&gt;&lt;input type=\"radio\" name=\"lang\" /&gt; CSS&lt;/label&gt;",
    "&lt;label&gt;&lt;input type=\"radio\" name=\"lang\" /&gt; JS&lt;/label&gt;",
    " ",
    "The key here is: All radios in a group must have the same name.",
    " ",
    "🗳️ Dropdown (Select & Option)",
    "Let users pick from a list:",
    "&lt;label for=\"favLang\"&gt;Favorite Language:&lt;/label&gt;",
    "&lt;select id=\"favLang\"&gt;",
    "  &lt;option&gt;HTML&lt;/option&gt;",
    "  &lt;option&gt;CSS&lt;/option&gt;",
    "  &lt;option&gt;JavaScript&lt;/option&gt;",
    "&lt;/select&gt;",
    " ",
    "📤 Submit the Form",
    "To send the data (somewhere):",
    "&lt;form action=\"/submit\" method=\"POST\"&gt;",
    "  &lt;!-- inputs here --&gt;",
    "  &lt;button type=\"submit\"&gt;Send&lt;/button&gt;",
    "&lt;/form&gt;",
    " ",
    "- action = where the form data goes (a server or API)",
    "- method=\"POST\" = how the data is sent",
    " ",
    "In real projects, you’ll often handle it with JavaScript instead of backend first.",
    " ",
    "✅ Summary – Form Building Checklist",
    "✔ Use &lt;form&gt; to wrap everything",
    "✔ Use &lt;label&gt; for accessibility",
    "✔ Choose the right &lt;input type=\"\"&gt;",
    "✔ Add a &lt;button type=\"submit\"&gt; to send",
    "✔ Use id + for to link inputs with labels"
];

export const tables = [
    "📊 Tables – Show Data Like a Pro (Not in Excel Anymore 😎)",
    "------------------------------",
    "Think of a table as a grid — rows and columns.",
    "Used for showing:",
    " ",
    " Mark sheets 📄",
    " Price lists 💰",
    " Scoreboards 🏏",
    " Or literally anything where data needs structure",
    " ",
    "🧠 The Basic Structure",
    " ",
    "Here’s what a simple HTML table looks like:",
    " ",
    "&lt;table&gt;",
    "  &lt;tr&gt;",
    "    &lt;th&gt;Name&lt;/th&gt;",
    "    &lt;th&gt;Age&lt;/th&gt;",
    "    &lt;th&gt;City&lt;/th&gt;",
    "  &lt;/tr&gt;",
    "  &lt;tr&gt;",
    "    &lt;td&gt;abcde&lt;/td&gt;",
    "    &lt;td&gt;21&lt;/td&gt;",
    "    &lt;td&gt;Kanpur&lt;/td&gt;",
    "  &lt;/tr&gt;",
    "  &lt;tr&gt;",
    "    &lt;td&gt;qwerty&lt;/td&gt;",
    "    &lt;td&gt;22&lt;/td&gt;",
    "    &lt;td&gt;Delhi&lt;/td&gt;",
    "  &lt;/tr&gt;",
    "&lt;/table&gt;",
    " ",
    "Let’s break it down:",
    " ",
    "| Tag     | Meaning                                   |",
    "| --------| ----------------------------------------- |",
    "| &lt;table&gt; | Starts the table                          |",
    "| &lt;tr&gt;    | Table Row                                 |",
    "| &lt;th&gt;    | Table Header (bold + centered by default) |",
    "| &lt;td&gt;    | Table Data (regular cell)                 |",
    " ",
    "🖼️ Think of It Visually",
    " ",
    "That above code makes a table like:",
    " ",
    "| Name  | Age | City   |",
    "| ----- | --- | ------ |",
    "| abcde | 21  | Kanpur |",
    "| qwerty| 22  | Delhi  |",
    " ",
    "Every row = &lt;tr&gt;",
    "Each heading = &lt;th&gt;",
    "Each cell = &lt;td&gt;",
    " ",
    "⚙️ Add Styling with Borders",
    " ",
    "HTML tables by default look bland. Let’s style it a bit:",
    " ",
    "&lt;table border=\"1\"&gt;",
    "  &lt;tr&gt;",
    "    &lt;th&gt;Name&lt;/th&gt;",
    "    &lt;th&gt;Role&lt;/th&gt;",
    "  &lt;/tr&gt;",
    "  &lt;tr&gt;",
    "    &lt;td&gt;abcde&lt;/td&gt;",
    "    &lt;td&gt;Frontend Dev&lt;/td&gt;",
    "  &lt;/tr&gt;",
    "&lt;/table&gt;",
    " ",
    "But modern way = use CSS:",
    " ",
    "&lt;style&gt;",
    "  table {",
    "    border-collapse: collapse;",
    "    width: 100%;",
    "  }",
    " ",
    "  th, td {",
    "    border: 1px solid ccc;",
    "    padding: 8px;",
    "    text-align: left;",
    "  }",
    " ",
    "  th {",
    "    background-color: f5f5f5;",
    "  }",
    "&lt;/style&gt;",
    " ",
    "🧬 Extra Tags You Might Use",
    " ",
    "| Tag       | Use                                 |",
    "| --------- | ----------------------------------- |",
    "| &lt;thead&gt;   | Groups header rows                  |",
    "| &lt;tbody&gt;   | Groups main body rows               |",
    "| &lt;tfoot&gt;   | Groups footer rows (like totals)    |",
    "| colspan   | One cell spreads across columns     |",
    "| rowspan   | One cell spreads across rows        |",
    " ",
    "✨ Example with Colspan:",
    " ",
    "&lt;tr&gt;",
    "  &lt;td colspan=\"2\"&gt;Total: ₹1000&lt;/td&gt;",
    "&lt;/tr&gt;",
    " ",
    "This cell will take 2 columns of space.",
    " ",
    "🚨 When NOT to Use Tables",
    " ",
    "Tables are for data, not layout!",
    "In old times people used &lt;table&gt; to design whole websites 😬",
    "Now we use CSS Grid or Flexbox for layout.",
    " ",
    "So just remember:",
    "🧠 Use tables when your data makes sense in rows and columns.",
    " ",
    "✅ Quick Recap",
    " ",
    " Use &lt;table&gt; to create tables",
    " &lt;tr&gt; = each row",
    " &lt;th&gt; = heading cell",
    " &lt;td&gt; = data cell",
    " colspan & rowspan = merge magic",
    " Add CSS to make it look 💅",
];

export const media = [
    "🎞️ Multimedia in HTML – Time to Add Life to Your Page",
    "------------------------------",
    "A page full of text is cool…",
    "But when you add videos, audios, and GIFs, it goes from meh to omg this slaps 🔥",
    " ",
    "Here’s how to do it the right way 👇",
    " ",
    "🧠 Images – Quick Refresher",
    " ",
    "We already did this but let's revisit:",
    " ",
    "&lt;img src=\"cutecat.jpg\" alt=\"sleepy cat\" width=\"300\" /&gt;",
    " ",
    " src → the image file",
    " alt → backup text + accessibility",
    " width/height → optional, but helps control size",
    " ",
    "✅ Supports JPG, PNG, SVG, GIF, WebP",
    " ",
    "📽️ Embedding Videos – Let’s Get Cinematic",
    " ",
    "🧠 &lt;video&gt; Tag",
    " ",
    "&lt;video width=\"400\" controls&gt;",
    "  &lt;source src=\"video.mp4\" type=\"video/mp4\" /&gt;",
    "  Your browser does not support the video tag.",
    "&lt;/video&gt;",
    " ",
    "✅ Things to notice:",
    " ",
    " controls → shows play/pause/volume buttons",
    " autoplay → starts automatically (⚠ needs muted=true too)",
    " loop → repeats forever",
    " poster → shows a thumbnail before play",
    " ",
    "Example:",
    " ",
    "&lt;video width=\"400\" controls poster=\"thumbnail.jpg\" autoplay muted loop&gt;",
    "  &lt;source src=\"dance.mp4\" type=\"video/mp4\" /&gt;",
    "&lt;/video&gt;",
    " ",
    "🔊 Embedding Audio – Play That Tune 🎧",
    " ",
    "🧠 &lt;audio&gt; Tag",
    " ",
    "&lt;audio controls&gt;",
    "  &lt;source src=\"bgmusic.mp3\" type=\"audio/mpeg\" /&gt;",
    "  Your browser does not support the audio element.",
    "&lt;/audio&gt;",
    " ",
    "Same attributes like video: autoplay, loop, muted, etc.",
    " ",
    "🌐 Embedding YouTube Videos",
    " ",
    "Want a YouTube video on your page? Use &lt;iframe&gt;:",
    " ",
    "&lt;iframe width=\"560\" height=\"315\" ",
    "  src=\"https://www.youtube.com/embed/VIDEO_ID\" ",
    "  title=\"YouTube video\" frameborder=\"0\"",
    "  allowfullscreen&gt;&lt;/iframe&gt;",
    " ",
    " Copy this from YouTube → Share → Embed",
    " Replace VIDEO_ID with actual ID from URL",
    "  Example: https://www.youtube.com/watch?v=abc123 → abc123",
    " ",
    "🧠 When to Use What?",
    " ",
    "| Media              | Use...     |",
    "| ------------------ | ---------- |",
    "| Image              | &lt;img&gt;    |",
    "| Self-hosted Video  | &lt;video&gt;  |",
    "| Self-hosted Audio  | &lt;audio&gt;  |",
    "| YouTube/Other site | &lt;iframe&gt; |",
    " ",
    "⚠️ Pro Tips",
    " ",
    " Don’t autoplay stuff with sound — it’s annoying for users",
    " Always include fallback text (“Your browser doesn’t support...”)",
    " Use .webm for optimized videos",
    " Compress big media files for better performance",
    " ",
    "✅ Recap Time",
    " ",
    " &lt;video&gt; = for local videos",
    " &lt;audio&gt; = for local sounds",
    " &lt;iframe&gt; = embed content from another website",
    " Always add controls, and maybe autoplay muted loop based on use"
];

export const best = [
    "✅ HTML Best Practices – Writing Clean, Professional Code from Day 1",
    " ",
    "Now that you know the what, let’s master the how —",
    "because messy HTML is like a pizza with pineapple 🍍 (controversial AND hard to digest 😬)",
    " ",
    "🧼 1. Always Use Proper Structure",
    " ",
    "✅ Start with:",
    " ",
    "&lt;!DOCTYPE html&gt;",
    "&lt;html&gt;",
    "  &lt;head&gt;",
    "    &lt;title&gt;My First Page&lt;/title&gt;",
    "  &lt;/head&gt;",
    "  &lt;body&gt;",
    "    &lt;!-- All visible stuff goes here --&gt;",
    "  &lt;/body&gt;",
    "&lt;/html&gt;",
    " ",
    "Don’t skip the basic skeleton. It helps the browser know how to read your code.",
    " ",
    "📛 2. Use Meaningful Tags (Don’t Just Spam &lt;div&gt;)",
    " ",
    "Instead of:",
    " ",
    "&lt;div&gt;Header&lt;/div&gt;",
    "&lt;div&gt;Main content&lt;/div&gt;",
    "&lt;div&gt;Footer&lt;/div&gt;",
    " ",
    "Do this:",
    " ",
    "&lt;header&gt;Header&lt;/header&gt;",
    "&lt;main&gt;Main content&lt;/main&gt;",
    "&lt;footer&gt;Footer&lt;/footer&gt;",
    " ",
    "It improves:",
    " ",
    " SEO",
    " Accessibility",
    " Readability",
    " ",
    "🏷️ 3. Use Alt Text in Images",
    " ",
    "Bad:",
    " ",
    "&lt;img src=\"cat.jpg\" /&gt;",
    " ",
    "Better:",
    " ",
    "&lt;img src=\"cat.jpg\" alt=\"A sleepy orange cat\" /&gt;",
    " ",
    "So that:",
    " ",
    " Blind users (screen readers) know what’s in the image",
    " If image fails, alt text still shows",
    " ",
    "🔤 4. Write Clear and Descriptive Code",
    " ",
    "Use:",
    " ",
    " Proper indentation (tabs or spaces, but be consistent)",
    " Meaningful names for IDs/classes",
    " Comments to explain sections",
    " ",
    "&lt;!-- Navigation bar starts here --&gt;",
    "&lt;nav&gt;...&lt;/nav&gt;",
    " ",
    "🔁 5. Reuse and Organize",
    " ",
    "Break your code into:",
    " ",
    " Sections with clear comments",
    " Reusable components (like headers, footers)",
    " External CSS or JavaScript files later on",
    " ",
    "⚙️ 6. Validate Your Code",
    " ",
    "Check your HTML for silly mistakes:",
    "Go to [https://validator.w3.org/](https://validator.w3.org/) and paste your code.",
    " ",
    "The validator will catch:",
    " ",
    " Unclosed tags",
    " Wrong nesting",
    " Typos in attributes",
    " ",
    "🧠 Final Recap – What You’ve Learned in HTML",
    " ",
    "✅ The true meaning of HTML — not just tags, but structure and logic",
    "✅ Headings, paragraphs, links, images",
    "✅ Lists (ordered & unordered)",
    "✅ Layout tags (div, span, semantic tags)",
    "✅ Forms and inputs – making your site interactive",
    "✅ Tables – no longer scary!",
    "✅ Multimedia – adding audio, video, and YouTube",
    "✅ Best practices – writing like a professional from the start",
    " ",
    "🐣 From here, your HTML isn’t “beginner-level” anymore.",
    " ",
    "It’s project-ready.",
    "You can build full pages — and understand every part of what you’re doing.",
    " ",
    "Your users won’t just see your site —",
    "They’ll feel the clarity, structure, and clean flow behind it 💫"
];

